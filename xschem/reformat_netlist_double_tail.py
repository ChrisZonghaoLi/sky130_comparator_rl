#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Tue Jan 16 15:40:32 2024

@author: lizongh2

This script is used to reformat the netlist generated by Xschem so that it can do the PEX simulation

.subckt double_tail_comparator_pex CLK VDD VSS Vin_p Vin_n Di_p Di_n Vout_n CLK_bar
.subckt double_tail_comp CLK Vin_p Vin_n Di_n Di_p Vout_n Vout_p CLK_bar VDD VSS

"""

import os
import re
import shutil
import yaml

PWD = os.getcwd()


#%% Double-tail

# load the RC extracted netlist 
with open(f'/autofs/fs1.ece/fs1.eecg.tcc/lizongh2/sky130_comparator/netgen/double_tail/TCL/double_tail_comparator_pex.spice', "r") as netlist:
    lines_RC = netlist.readlines()

# load the PEX testbench schematic netlist 
with open(f'/autofs/fs1.ece/fs1.eecg.tcc/lizongh2/sky130_comparator/xschem/simulations/double_tail_comp_pex_tb.spice', "r") as netlist:
    lines_PEX = netlist.readlines()

# remove the definition of comparator subcircuit in the PEX testbench netlist, except the starting line of the subcircuit IO definition
idx_list = []
idx_start = 0
for idx, line in enumerate(lines_PEX):
    if line[:24] == '.subckt double_tail_comp': 
        idx_start = idx + 1
    if line == '.ends\n' and idx_start > 0: 
        idx_list.append(idx)
idx_end = idx_list[0]+1

del lines_PEX[idx_start:idx_end]

# read MAGIC RC extracted netlist, abandom the first line of subcircuit IO definition
for idx, line in enumerate(lines_RC):
    if line[:34] == '.subckt double_tail_comparator_pex': 
        subckt = lines_RC[idx+1 : len(lines_RC)]

# Now, find the new idx for the definition of comparator subcircuit in Xschem generated netlist
for idx, line in enumerate(lines_PEX):
    if line[:24] == '.subckt double_tail_comp': 
        idx_start_subckt = idx + 1 # you start append the RC extracted comparator netlist from here

lines_PEX[idx_start_subckt:idx_start_subckt] = subckt

# flush the PEX testbench netlist
open(f'/autofs/fs1.ece/fs1.eecg.tcc/lizongh2/sky130_comparator/xschem/simulations/double_tail_comp_pex_tb.spice', "w").close()
# overwrite the PEX testbench netlist for including RC extracted comparator
with open(f'/autofs/fs1.ece/fs1.eecg.tcc/lizongh2/sky130_comparator/xschem/simulations/double_tail_comp_pex_tb.spice', "w") as netlist:
    for line in lines_PEX:
        netlist.write(line)

# also load some variables for the testbench stimulus
with open(f'/autofs/fs1.ece/fs1.eecg.tcc/lizongh2/sky130_comparator/xschem/simulations/double_tail_comp_tb_vars.spice', "r") as variables:
    params = variables.readlines()

for param in params:
    for i in range(0,len(param)):
        match_number = re.compile('-?\ *[0-9]+\.?[0-9]*(?:[Ee]\ *-?\ *[0-9]+)?')
        if param[i:i+3] == 'VDD':
            VDD = param.replace('\n', '') #float(re.findall(match_number, param)[0])
        if param[i:i+3] == 'Vcm':
            Vcm = param.replace('\n', '')
        if param[i:i+4] == 'Vin=':
            Vin = param.replace('\n', '')
        if param[i:i+7] == 'Vin_min':
            Vin_min = param.replace('\n', '')
        if param[i:i+2] == 'CL':
            CL = param.replace('\n', '')
        if param[i:i+5] == 'Tclk=':
            Tclk = param.replace('\n', '')
        if param[i:i+7] == 'Tclk_pk':
            Tclk_pk = param.replace('\n', '')
        if param[i:i+7] == 'Tdelay=':
            Tdelay = param.replace('\n', '')
        if param[i:i+10] == 'Tdelay_bar':
            Tdelay_bar = param.replace('\n', '')
        if param[i:i+2] == 'Tr':
            Tr = param.replace('\n', '')
        if param[i:i+2] == 'Tf':
            Tf = param.replace('\n', '')
      
# generate a .spice file to store these stimulus
f = open('/autofs/fs1.ece/fs1.eecg.tcc/lizongh2/sky130_comparator/xschem/simulations/double_tail_comp_pex_tb_vars.spice','w+')
text =  \
f'''{Vcm}
{VDD}
{Vin}
{Vin_min}
{CL}
{Tclk}
{Tclk_pk}
{Tdelay}
{Tdelay_bar}
{Tr}
{Tf}
  '''
f.write(text)
f.close()






